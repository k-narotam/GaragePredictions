{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Desktop/garagePredictions/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./pages/About\";\nimport Feedback from \"./pages/Feedback\";\nimport Map from \"./pages/Map\";\nimport Settings from './pages/Settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getStorageTheme = () => {\n  let theme = 'light-theme';\n\n  if (localStorage.getItem('theme')) {\n    theme = localStorage.getItem('theme');\n  }\n\n  return theme;\n};\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(getStorageTheme());\n\n  const toggleTheme = () => {\n    if (theme === 'light-theme') {\n      setTheme('dark-theme');\n    } else {\n      setTheme('light-theme');\n    }\n  };\n\n  useEffect(() => {\n    document.documentElement.className = theme;\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: toggleTheme,\n        children: \"toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/feedback\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Feedback, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/map\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/settings\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WJF5aPYhyUw4Z8Gfq9gtmIGniIQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Desktop/garagePredictions/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navbar","About","Feedback","Map","Settings","getStorageTheme","theme","localStorage","getItem","App","setTheme","toggleTheme","document","documentElement","className","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,sCAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAsD,kBAAtD;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIC,KAAK,GAAG,aAAZ;;AACA,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCF,IAAAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACD;;AACD,SAAOF,KAAP;AACD,CAND;;AASA,SAASG,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBhB,QAAQ,CAACW,eAAe,EAAhB,CAAlC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxB,QAAIL,KAAK,KAAK,aAAd,EAA6B;AAC3BI,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACD;AAEF,GAPD;;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCR,KAArC;AACAC,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BT,KAA9B;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAIA,sBAGE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEK,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA;AAAA;AAAA;AAAA,cANA,eAOA,QAAC,MAAD;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,MAAxB;AAAyB,UAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAqBD;;GArCQF,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\"\nimport About from \"./pages/About\";\nimport Feedback from \"./pages/Feedback\";\nimport Map from \"./pages/Map\";\nimport Settings from './pages/Settings';\n\n\nconst getStorageTheme = () => {\n  let theme = 'light-theme';\n  if (localStorage.getItem('theme')) {\n    theme = localStorage.getItem('theme');\n  }\n  return theme;\n};\n\n\nfunction App() {\n\n  const [theme, setTheme] = useState(getStorageTheme());\n\n  const toggleTheme = () => {\n    if (theme === 'light-theme') {\n      setTheme('dark-theme');\n    } else {\n      setTheme('light-theme');\n    }\n\n  };\n  useEffect(() => {\n    document.documentElement.className = theme;\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  return (\n\n    \n    <Router>\n      <div className=\"container\">\n          <button className=\"btn\" onClick={toggleTheme}>\n            toggle\n          </button>\n\n      <Navbar />\n      <br/>\n      <Routes>\n      <Route path=\"/about\" exact element={<About/>} />\n      <Route path=\"/feedback\" exact element={<Feedback/>} />\n      <Route path=\"/map\" exact element={<Map/>} />\n      <Route path=\"/settings\" exact element={<Settings/>} />\n      </Routes>\n     \n      </div>\n    </Router>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}