{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Desktop/garagePredictions/frontend/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [theme, setTheme] = useState(getStorageTheme());\n\n  const toggleTheme = () => {\n    if (theme === 'light-theme') {\n      setTheme('dark-theme');\n    } else {\n      setTheme('light-theme');\n    }\n  };\n\n  useEffect(() => {\n    document.documentElement.className = theme;\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Settings page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Settings, \"WJF5aPYhyUw4Z8Gfq9gtmIGniIQ=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/karina/Desktop/garagePredictions/frontend/src/pages/Settings.js"],"names":["React","useState","useEffect","Settings","theme","setTheme","getStorageTheme","toggleTheme","document","documentElement","className","localStorage","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,QAAQ,GAAG,MACjB;AAAA;;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACK,eAAe,EAAhB,CAAlC;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIH,KAAK,KAAK,aAAd,EAA6B;AAC7BC,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACC,KAFD,MAEO;AACPA,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACC;AAEJ,GAPD;;AAQAH,EAAAA,SAAS,CAAC,MAAM;AAAEM,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCN,KAArC;AAClBO,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACD,GAFU,EAER,CAACA,KAAD,CAFQ,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CAtBD;;GAAMD,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst Settings = () =>\n{\n    const [theme, setTheme] = useState(getStorageTheme());\n\n    const toggleTheme = () => {\n        if (theme === 'light-theme') {\n        setTheme('dark-theme');\n        } else {\n        setTheme('light-theme');\n        }\n\n    };\n    useEffect(() => { document.documentElement.className = theme;\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n    \n    return(\n      <div>\n        Settings page\n      </div>\n    );\n};\nexport default Settings;"]},"metadata":{},"sourceType":"module"}